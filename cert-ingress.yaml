apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: brooks-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
#    nginx.ingress.kubernetes.io/cors-allow-origin: "https://www.brooks-dusura.uk"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers:  "Origin, Content-Type, Accept, Authorization, X-Requested-With"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Authorization, Origin"
    cert-manager.io/cluster-issuer: letsencrypt-prod # Enable TLS with cert-manager
spec:
  ingressClassName: nginx
  rules:
    - host: www.brooks-dusura.uk
      http:
        paths:
          - path: /auth
            pathType: Prefix
            backend:
              service:
                name: auth-server
                port:
                  number: 8080
          - path: /user-auth
            pathType: Prefix
            backend:
              service:
                name: authentication-server
                port:
                  number: 8081
          - path: /places
            pathType: Prefix
            backend:
              service:
                name: reflect-places-1
                port:
                  number: 8081
          - path: /
            pathType: Prefix
            backend:
              service:
                name: brooks-app-service
                port:
                  number: 80
  tls:
    - hosts:
        - www.brooks-dusura.uk
      secretName: brooks-tls # Ensure this secret exists for HTTPS
